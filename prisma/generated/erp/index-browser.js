
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BancoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  codigo: 'codigo',
  nome: 'nome',
  bloqueia_venda_sn: 'bloqueia_venda_sn',
  digital_sn: 'digital_sn',
  ativo_sn: 'ativo_sn',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Banco_contaScalarFieldEnum = {
  id: 'id',
  banco_id: 'banco_id',
  cnpj_conta: 'cnpj_conta',
  agencia: 'agencia',
  digito_agencia: 'digito_agencia',
  conta: 'conta',
  digito_conta: 'digito_conta',
  contabil: 'contabil',
  lote: 'lote',
  limite_banco: 'limite_banco',
  cbhost: 'cbhost'
};

exports.Prisma.Banco_boleto_configScalarFieldEnum = {
  id: 'id',
  banco_id: 'banco_id',
  carteira: 'carteira',
  variacao_carteira: 'variacao_carteira',
  cedente: 'cedente',
  digito_cedente: 'digito_cedente',
  contrato: 'contrato',
  emite_boleto_sn: 'emite_boleto_sn',
  numero_boleto: 'numero_boleto',
  taxa_emissao: 'taxa_emissao',
  tipo_cobranca: 'tipo_cobranca',
  layout_arquivo: 'layout_arquivo',
  codigo_transmissao: 'codigo_transmissao'
};

exports.Prisma.Banco_pix_configScalarFieldEnum = {
  id: 'id',
  banco_id: 'banco_id',
  chave_pix: 'chave_pix',
  tipo_chave_pix: 'tipo_chave_pix',
  psp: 'psp',
  ambiente: 'ambiente'
};

exports.Prisma.Banco_credenciaisScalarFieldEnum = {
  id: 'id',
  banco_id: 'banco_id',
  caminho_certificado: 'caminho_certificado',
  senha_certificado: 'senha_certificado',
  client_id: 'client_id',
  client_secret: 'client_secret'
};

exports.Prisma.Caixa_aberturasScalarFieldEnum = {
  id_caixa: 'id_caixa',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_usuario: 'id_usuario',
  data_abertura: 'data_abertura',
  saldo_inicial: 'saldo_inicial',
  data_fechamento: 'data_fechamento',
  saldo_final: 'saldo_final',
  ip_abertura: 'ip_abertura',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Caixa_documentosScalarFieldEnum = {
  id_lancamento: 'id_lancamento',
  uuid: 'uuid',
  id_caixa: 'id_caixa',
  id_tipo_pg: 'id_tipo_pg',
  numero_doc: 'numero_doc',
  historico: 'historico',
  valor: 'valor',
  status: 'status',
  banco_id: 'banco_id',
  tipo: 'tipo',
  usuario: 'usuario',
  data_lanc: 'data_lanc',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Caixa_pagamentosScalarFieldEnum = {
  id_pagamento: 'id_pagamento',
  uuid: 'uuid',
  id_caixa: 'id_caixa',
  id_venda: 'id_venda',
  id_tipo_pg: 'id_tipo_pg',
  id_forma_pg: 'id_forma_pg',
  valor: 'valor',
  parcelas: 'parcelas',
  taxa: 'taxa',
  valor_taxa: 'valor_taxa',
  tipo: 'tipo',
  data_receb: 'data_receb',
  usuario: 'usuario',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CargoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  descricao: 'descricao',
  salario_base: 'salario_base',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CidadeScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  nome: 'nome',
  id_estado: 'id_estado',
  ddd: 'ddd',
  codigo_ibge: 'codigo_ibge'
};

exports.Prisma.ClasfisScalarFieldEnum = {
  id_clasfis: 'id_clasfis',
  uuid: 'uuid',
  cod_clasfis: 'cod_clasfis',
  descricao: 'descricao',
  rest_icms: 'rest_icms',
  cod_generico: 'cod_generico',
  valor_perc: 'valor_perc'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  tipo: 'tipo',
  nome_razao: 'nome_razao',
  nome_fantasia: 'nome_fantasia',
  cpf_cnpj: 'cpf_cnpj',
  inscricao_estadual: 'inscricao_estadual',
  inscricao_municipal: 'inscricao_municipal',
  suframa: 'suframa',
  email: 'email',
  telefone: 'telefone',
  celular: 'celular',
  site: 'site',
  limite_credito: 'limite_credito',
  condicao_pagto: 'condicao_pagto',
  dia_vencimento: 'dia_vencimento',
  avaliacao_sn: 'avaliacao_sn',
  atacadista_sn: 'atacadista_sn',
  id_vendedor: 'id_vendedor',
  observacao: 'observacao',
  ativo_sn: 'ativo_sn',
  comissao_vendedor_fixado_sn: 'comissao_vendedor_fixado_sn',
  ignora_analise_credito_sn: 'ignora_analise_credito_sn',
  desconto_boleto_sn: 'desconto_boleto_sn',
  id_tabela_preco: 'id_tabela_preco',
  faturamento_mensal_sn: 'faturamento_mensal_sn',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Cliente_associadoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_cliente: 'id_cliente',
  matricula: 'matricula',
  dt_admissao: 'dt_admissao',
  sexo: 'sexo',
  profissao: 'profissao',
  pai: 'pai',
  mae: 'mae',
  conjuge: 'conjuge',
  renda_principal: 'renda_principal',
  renda_complementar: 'renda_complementar',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Cliente_dependenteScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_cliente: 'id_cliente',
  nome: 'nome',
  data_nascimento: 'data_nascimento',
  parentesco: 'parentesco',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Cliente_enderecoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_cliente: 'id_cliente',
  tipo: 'tipo',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  bairro: 'bairro',
  id_cidade: 'id_cidade',
  cep: 'cep',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Cliente_referenciaScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_cliente: 'id_cliente',
  tipo: 'tipo',
  descricao: 'descricao',
  telefone: 'telefone',
  observacao: 'observacao',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Cliente_socioScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_cliente: 'id_cliente',
  nome: 'nome',
  percentual: 'percentual',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Codigos_barrasScalarFieldEnum = {
  id_barcode: 'id_barcode',
  uuid: 'uuid',
  id_item: 'id_item',
  codigo: 'codigo',
  tipo: 'tipo',
  isdeleted: 'isdeleted'
};

exports.Prisma.ComandasScalarFieldEnum = {
  id_comanda: 'id_comanda',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  numero: 'numero',
  id_cliente: 'id_cliente',
  id_usuario: 'id_usuario',
  id_motorista: 'id_motorista',
  status: 'status',
  data_abertura: 'data_abertura',
  data_fechamento: 'data_fechamento',
  qtd_itens: 'qtd_itens',
  valor_total: 'valor_total',
  troco_para: 'troco_para',
  observacao: 'observacao',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Comandas_itensScalarFieldEnum = {
  id_item_comanda: 'id_item_comanda',
  uuid: 'uuid',
  id_comanda: 'id_comanda',
  id_item: 'id_item',
  id_unidade: 'id_unidade',
  quantidade: 'quantidade',
  preco_unitario: 'preco_unitario',
  desconto_valor: 'desconto_valor',
  total_item: 'total_item',
  id_vendedor: 'id_vendedor',
  observacao: 'observacao',
  status: 'status',
  data_atendimento: 'data_atendimento',
  impresso: 'impresso',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Configuracao_empresaScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_banco_tef: 'id_banco_tef',
  juros_dia: 'juros_dia',
  multa_atraso: 'multa_atraso',
  dias_protesto: 'dias_protesto',
  id_impressora_exp: 'id_impressora_exp',
  id_impressora_imed: 'id_impressora_imed',
  id_impressora_ped: 'id_impressora_ped',
  tipo_impressao_exp: 'tipo_impressao_exp',
  imprime_boleto_sn: 'imprime_boleto_sn',
  ativo_sn: 'ativo_sn',
  mensagem_fixa_nota: 'mensagem_fixa_nota',
  path_logo: 'path_logo',
  licenca: 'licenca',
  atacadista_sn: 'atacadista_sn',
  observacao: 'observacao',
  conta_contabil: 'conta_contabil',
  centro_distribuicao: 'centro_distribuicao',
  ver_centro_distribuicao: 'ver_centro_distribuicao',
  custo_operacional: 'custo_operacional',
  tributos_federais: 'tributos_federais',
  pis_cofins: 'pis_cofins',
  industria_sn: 'industria_sn',
  matriz_sn: 'matriz_sn',
  certificado_digital: 'certificado_digital',
  path_certificado: 'path_certificado',
  senha_certificado: 'senha_certificado',
  path_logo_nfe: 'path_logo_nfe',
  pede_cadastro_os: 'pede_cadastro_os',
  regime_fiscal: 'regime_fiscal',
  codigo_regime_tributario: 'codigo_regime_tributario',
  representacao_sn: 'representacao_sn',
  id_matriz: 'id_matriz',
  path_nfe: 'path_nfe',
  path_nfc: 'path_nfc',
  path_nfs: 'path_nfs',
  path_cte: 'path_cte',
  id_csc: 'id_csc',
  token_csc: 'token_csc',
  consulta_cliente_telefone: 'consulta_cliente_telefone',
  imprime_recibo_cx: 'imprime_recibo_cx',
  carrega_ultimo_preco: 'carrega_ultimo_preco',
  revende_insumo_reciclado: 'revende_insumo_reciclado',
  promocao_tipo_pagamento_sn: 'promocao_tipo_pagamento_sn',
  prioriza_estoque_local: 'prioriza_estoque_local',
  imprime_materiaprima_pedido: 'imprime_materiaprima_pedido',
  mostrar_preco_materiaprima_pedido: 'mostrar_preco_materiaprima_pedido',
  aliquota_iss: 'aliquota_iss',
  petshop_sn: 'petshop_sn',
  autoriza_venda_abaixo_quantidade_embalagem: 'autoriza_venda_abaixo_quantidade_embalagem',
  controla_saida_comanda: 'controla_saida_comanda',
  ler_codigo_barras_modelo2: 'ler_codigo_barras_modelo2',
  tipo_empresa: 'tipo_empresa',
  bloqueia_item_sem_saldo_pdv: 'bloqueia_item_sem_saldo_pdv',
  pedir_taxa_de_entrega: 'pedir_taxa_de_entrega',
  imprimir_taxa_de_entrega_no_nfc: 'imprimir_taxa_de_entrega_no_nfc',
  agenda_por_hora: 'agenda_por_hora',
  trabalha_com_coleta: 'trabalha_com_coleta',
  posvenda_por_cliente: 'posvenda_por_cliente',
  path_logo_nfs: 'path_logo_nfs',
  pdv_modo_ficha: 'pdv_modo_ficha',
  logo_expandida_sn: 'logo_expandida_sn',
  comissao_por_markup: 'comissao_por_markup',
  imprime_requisicao_entre_lojas: 'imprime_requisicao_entre_lojas',
  pedir_ddd_cliente: 'pedir_ddd_cliente',
  baixar_financeiro_pelo_caixa: 'baixar_financeiro_pelo_caixa',
  banco_pix: 'banco_pix',
  consulta_pedido_por_numero_comanda: 'consulta_pedido_por_numero_comanda',
  hostname_cadastro: 'hostname_cadastro',
  usuario_cadastro: 'usuario_cadastro',
  faturamento_por_nota_fiscal: 'faturamento_por_nota_fiscal',
  perfil_sped_icms: 'perfil_sped_icms',
  contabiliza_troca: 'contabiliza_troca',
  cst_reducao_base_calculo: 'cst_reducao_base_calculo',
  gera_titulo_na_venda: 'gera_titulo_na_venda',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Contas_pagarScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_fornecedor: 'id_fornecedor',
  id_nota_entrada: 'id_nota_entrada',
  numero_documento: 'numero_documento',
  parcela: 'parcela',
  valor_original: 'valor_original',
  valor_atual: 'valor_atual',
  data_emissao: 'data_emissao',
  data_vencimento: 'data_vencimento',
  status: 'status',
  juros_dia: 'juros_dia',
  multa: 'multa',
  desconto: 'desconto',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Contas_pagar_baixasScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_conta: 'id_conta',
  id_forma_pgto: 'id_forma_pgto',
  id_usuario: 'id_usuario',
  data_baixa: 'data_baixa',
  valor_pago: 'valor_pago',
  juros: 'juros',
  multa: 'multa',
  desconto: 'desconto',
  observacao: 'observacao',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Contas_pagar_funcionariosScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_funcionario: 'id_funcionario',
  competencia: 'competencia',
  id_obrigacao_tipo: 'id_obrigacao_tipo',
  id_desconto_tipo: 'id_desconto_tipo',
  valor: 'valor',
  dt_vencimento: 'dt_vencimento',
  quitado_sn: 'quitado_sn',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Contas_pagas_funcionariosScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_conta_pagar_func: 'id_conta_pagar_func',
  valor_pago: 'valor_pago',
  dt_pagamento: 'dt_pagamento',
  forma_pagamento: 'forma_pagamento',
  observacao: 'observacao',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Contas_receberScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_cliente: 'id_cliente',
  id_venda: 'id_venda',
  numero_titulo: 'numero_titulo',
  parcela: 'parcela',
  valor_original: 'valor_original',
  valor_atual: 'valor_atual',
  data_emissao: 'data_emissao',
  data_vencimento: 'data_vencimento',
  status: 'status',
  nosso_numero: 'nosso_numero',
  observacao: 'observacao',
  juros_dia: 'juros_dia',
  multa: 'multa',
  desconto: 'desconto',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Contas_receber_baixasScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_titulo: 'id_titulo',
  id_forma_pgto: 'id_forma_pgto',
  id_usuario: 'id_usuario',
  data_baixa: 'data_baixa',
  valor_pago: 'valor_pago',
  juros: 'juros',
  multa: 'multa',
  desconto: 'desconto',
  observacao: 'observacao',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Contato_funcionarioScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_funcionario: 'id_funcionario',
  tipo: 'tipo',
  valor: 'valor',
  observacao: 'observacao',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CstScalarFieldEnum = {
  id_cst: 'id_cst',
  uuid: 'uuid',
  cod_cst: 'cod_cst',
  descricao: 'descricao',
  txt_l1: 'txt_l1',
  txt_l2: 'txt_l2',
  paga_imposto: 'paga_imposto',
  icms_l: 'icms_l',
  icms_f: 'icms_f',
  cod_ecf: 'cod_ecf',
  perc_subst: 'perc_subst',
  cfop_int: 'cfop_int',
  cfop_ext: 'cfop_ext',
  reduz_bc: 'reduz_bc',
  dt_alteracao: 'dt_alteracao'
};

exports.Prisma.Custos_producao_eqpScalarFieldEnum = {
  id_eqp: 'id_eqp',
  uuid: 'uuid',
  id_ordem: 'id_ordem',
  equipamento: 'equipamento',
  horas: 'horas',
  custo_hora: 'custo_hora',
  custo_total: 'custo_total',
  created_at: 'created_at'
};

exports.Prisma.Custos_producao_hhScalarFieldEnum = {
  id_hh: 'id_hh',
  uuid: 'uuid',
  id_ordem: 'id_ordem',
  funcionario: 'funcionario',
  horas: 'horas',
  custo_hora: 'custo_hora',
  custo_total: 'custo_total',
  created_at: 'created_at'
};

exports.Prisma.Descontos_funcionarios_tipoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  descricao: 'descricao',
  ativo_sn: 'ativo_sn',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EmpresaScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  razao_social: 'razao_social',
  nome_fantasia: 'nome_fantasia',
  nome_curto: 'nome_curto',
  cnpj: 'cnpj',
  inscricao_estadual: 'inscricao_estadual',
  inscricao_municipal: 'inscricao_municipal',
  suframa: 'suframa',
  logradouro: 'logradouro',
  numero: 'numero',
  bairro: 'bairro',
  id_cidade: 'id_cidade',
  complemento: 'complemento',
  telefone: 'telefone',
  celular: 'celular',
  whatsapp: 'whatsapp',
  email: 'email',
  site: 'site',
  responsavel: 'responsavel',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Endereco_funcionarioScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_funcionario: 'id_funcionario',
  tipo: 'tipo',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  bairro: 'bairro',
  cidade: 'cidade',
  estado: 'estado',
  cep: 'cep',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EntregasScalarFieldEnum = {
  id_entrega: 'id_entrega',
  id_venda: 'id_venda',
  id_motorista: 'id_motorista',
  tipo_frete: 'tipo_frete',
  valor_frete: 'valor_frete',
  volumes: 'volumes',
  peso_total: 'peso_total',
  data_saida: 'data_saida',
  hora_saida: 'hora_saida',
  local_entrega: 'local_entrega'
};

exports.Prisma.EquipamentoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_cliente: 'id_cliente',
  id_modelo: 'id_modelo',
  descricao: 'descricao',
  acessorio: 'acessorio',
  codigo_fab: 'codigo_fab',
  numero_serial: 'numero_serial',
  data_instalacao: 'data_instalacao',
  observacao: 'observacao',
  ativo_sn: 'ativo_sn',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Equipamento_contatoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_equipamento: 'id_equipamento',
  tipo: 'tipo',
  valor: 'valor',
  observacao: 'observacao',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Equipamento_enderecoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_equipamento: 'id_equipamento',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  bairro: 'bairro',
  cep: 'cep',
  cidade: 'cidade',
  estado: 'estado',
  zona: 'zona',
  ponto_referencia: 'ponto_referencia',
  local_instalado: 'local_instalado',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Equipamento_manutencaoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_equipamento: 'id_equipamento',
  tipo: 'tipo',
  periodo: 'periodo',
  ultima_execucao: 'ultima_execucao',
  proxima_execucao: 'proxima_execucao',
  observacao: 'observacao',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EstadoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  nome: 'nome',
  uf: 'uf',
  codigo_ibge: 'codigo_ibge'
};

exports.Prisma.FamiliasScalarFieldEnum = {
  id_familia: 'id_familia',
  uuid: 'uuid',
  id_subgrupo: 'id_subgrupo',
  descricao: 'descricao',
  identificador: 'identificador',
  status: 'status',
  data_alteracao: 'data_alteracao'
};

exports.Prisma.Formas_pagamentoScalarFieldEnum = {
  id_forma: 'id_forma',
  uuid: 'uuid',
  descricao: 'descricao',
  id_tipo: 'id_tipo',
  ativo: 'ativo',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Formas_pagamento_parcelasScalarFieldEnum = {
  id_parcela: 'id_parcela',
  id_forma: 'id_forma',
  ordem: 'ordem',
  dias: 'dias',
  percentual: 'percentual',
  acrescimo: 'acrescimo'
};

exports.Prisma.FornecedoresScalarFieldEnum = {
  id_fornecedor: 'id_fornecedor',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  nome: 'nome',
  fantasia: 'fantasia',
  endereco: 'endereco',
  numero: 'numero',
  complemento: 'complemento',
  bairro: 'bairro',
  cep: 'cep',
  cidade: 'cidade',
  uf: 'uf',
  telefone: 'telefone',
  email: 'email',
  cnpj_cpf: 'cnpj_cpf',
  inscricao_est: 'inscricao_est',
  inscricao_mun: 'inscricao_mun',
  contato: 'contato',
  ativo: 'ativo',
  data_cadastro: 'data_cadastro',
  isdeleted: 'isdeleted'
};

exports.Prisma.Fotos_itensScalarFieldEnum = {
  id_foto: 'id_foto',
  uuid: 'uuid',
  id_item: 'id_item',
  url: 'url',
  ordem: 'ordem',
  isdeleted: 'isdeleted'
};

exports.Prisma.FuncionarioScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  nome: 'nome',
  cpf: 'cpf',
  rg: 'rg',
  dt_nascimento: 'dt_nascimento',
  email: 'email',
  telefone: 'telefone',
  celular: 'celular',
  id_cargo: 'id_cargo',
  dt_admissao: 'dt_admissao',
  dt_demissao: 'dt_demissao',
  ativo_sn: 'ativo_sn',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.GruposScalarFieldEnum = {
  id_grupo: 'id_grupo',
  uuid: 'uuid',
  descricao: 'descricao',
  perc_comissao: 'perc_comissao',
  ativo: 'ativo',
  aliq_icms: 'aliq_icms',
  reducao_icms: 'reducao_icms',
  comissao_linha: 'comissao_linha',
  data_alteracao: 'data_alteracao'
};

exports.Prisma.ImpressoraScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  nome: 'nome',
  endereco_rede: 'endereco_rede',
  id_empresa: 'id_empresa',
  tipo_impressora: 'tipo_impressora',
  colunas: 'colunas',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ItensScalarFieldEnum = {
  id_item: 'id_item',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_fornecedor: 'id_fornecedor',
  id_grupo: 'id_grupo',
  id_subgrupo: 'id_subgrupo',
  id_familia: 'id_familia',
  descricao: 'descricao',
  descricao_fat: 'descricao_fat',
  unidade_venda: 'unidade_venda',
  marca: 'marca',
  qtde_embalagem: 'qtde_embalagem',
  peso_bruto: 'peso_bruto',
  peso_liquido: 'peso_liquido',
  ativo: 'ativo',
  permite_negativo: 'permite_negativo',
  aceita_desconto: 'aceita_desconto',
  servico: 'servico',
  data_cadastro: 'data_cadastro',
  usuario_cadastro: 'usuario_cadastro',
  isdeleted: 'isdeleted',
  id_unidade: 'id_unidade'
};

exports.Prisma.Itens_bomScalarFieldEnum = {
  id_bom: 'id_bom',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_item_pai: 'id_item_pai',
  id_item_comp: 'id_item_comp',
  qtd_por_un: 'qtd_por_un',
  und_pai: 'und_pai',
  und_comp: 'und_comp',
  ativo: 'ativo',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  id_unidade_pai: 'id_unidade_pai',
  id_unidade_comp: 'id_unidade_comp'
};

exports.Prisma.LotesScalarFieldEnum = {
  id_lote: 'id_lote',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_item: 'id_item',
  numero: 'numero',
  data_fabricacao: 'data_fabricacao',
  data_validade: 'data_validade',
  quantidade_inicial: 'quantidade_inicial',
  quantidade_atual: 'quantidade_atual',
  status: 'status',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  custo_materia: 'custo_materia',
  custo_hh: 'custo_hh',
  custo_eqp: 'custo_eqp',
  custo_outros: 'custo_outros',
  custo_total: 'custo_total',
  custo_unitario: 'custo_unitario'
};

exports.Prisma.Lotes_cobrancaScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  data_geracao: 'data_geracao',
  data_envio: 'data_envio',
  status: 'status',
  qtd_titulos: 'qtd_titulos',
  valor_total: 'valor_total',
  id_usuario: 'id_usuario',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MarcaScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  nome: 'nome',
  ativo_sn: 'ativo_sn',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ModeloScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_marca: 'id_marca',
  nome: 'nome',
  potencia: 'potencia',
  ativo_sn: 'ativo_sn',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MotoristasScalarFieldEnum = {
  id_motorista: 'id_motorista',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  nome: 'nome',
  cpf: 'cpf',
  cnh: 'cnh',
  categoria_cnh: 'categoria_cnh',
  validade_cnh: 'validade_cnh',
  telefone: 'telefone',
  ativo: 'ativo',
  created_at: 'created_at',
  updated_at: 'updated_at',
  isdeleted: 'isdeleted'
};

exports.Prisma.Movimento_financeiroScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_plano: 'id_plano',
  origem: 'origem',
  id_origem: 'id_origem',
  tipo: 'tipo',
  data_mov: 'data_mov',
  valor: 'valor',
  historico: 'historico',
  documento: 'documento',
  forma_pagto: 'forma_pagto',
  conciliado: 'conciliado',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Movimentos_estoqueScalarFieldEnum = {
  id_mov: 'id_mov',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_item: 'id_item',
  data_mov: 'data_mov',
  st: 'st',
  tipo: 'tipo',
  preco_compra: 'preco_compra',
  preco_venda: 'preco_venda',
  quantidade: 'quantidade',
  custo_unit: 'custo_unit',
  custo_total: 'custo_total',
  id_ordem: 'id_ordem',
  numdoc: 'numdoc',
  observacoes: 'observacoes',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  id_lote: 'id_lote'
};

exports.Prisma.Nota_entrada_itensScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_nota: 'id_nota',
  id_item: 'id_item',
  quantidade: 'quantidade',
  preco_unitario: 'preco_unitario',
  unidade: 'unidade',
  valor_total: 'valor_total',
  cfop: 'cfop',
  ncm: 'ncm',
  cst: 'cst',
  aliquota_icms: 'aliquota_icms',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Notas_entradaScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_fornecedor: 'id_fornecedor',
  id_pedido: 'id_pedido',
  numero: 'numero',
  serie: 'serie',
  modelo: 'modelo',
  chave_acesso: 'chave_acesso',
  data_emissao: 'data_emissao',
  data_entrada: 'data_entrada',
  valor_produtos: 'valor_produtos',
  valor_frete: 'valor_frete',
  valor_seguro: 'valor_seguro',
  valor_despesas: 'valor_despesas',
  valor_ipi: 'valor_ipi',
  valor_icms: 'valor_icms',
  valor_total: 'valor_total',
  status: 'status',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Notas_fiscaisScalarFieldEnum = {
  id_nf: 'id_nf',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  numero: 'numero',
  serie: 'serie',
  modelo: 'modelo',
  tipo_nf: 'tipo_nf',
  id_venda: 'id_venda',
  id_cliente: 'id_cliente',
  cfop: 'cfop',
  emissao: 'emissao',
  saida: 'saida',
  status: 'status',
  protocolo: 'protocolo',
  recibo: 'recibo',
  chave_acesso: 'chave_acesso',
  motivo_cancelamento: 'motivo_cancelamento',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Notas_fiscais_eventosScalarFieldEnum = {
  id_nf_evento: 'id_nf_evento',
  id_nf: 'id_nf',
  tipo_evento: 'tipo_evento',
  descricao: 'descricao',
  usuario: 'usuario',
  data_evento: 'data_evento'
};

exports.Prisma.Notas_fiscais_itensScalarFieldEnum = {
  id_nf_item: 'id_nf_item',
  id_nf: 'id_nf',
  id_item: 'id_item',
  descricao: 'descricao',
  unidade: 'unidade',
  quantidade: 'quantidade',
  preco_unitario: 'preco_unitario',
  valor_total: 'valor_total',
  cfop: 'cfop',
  ncm: 'ncm',
  cst: 'cst',
  created_at: 'created_at'
};

exports.Prisma.Notas_fiscais_itens_tributosScalarFieldEnum = {
  id_item_tributo: 'id_item_tributo',
  id_nf_item: 'id_nf_item',
  base_icms: 'base_icms',
  valor_icms: 'valor_icms',
  base_st: 'base_st',
  valor_st: 'valor_st',
  aliquota_icms: 'aliquota_icms',
  valor_ipi: 'valor_ipi',
  aliquota_ipi: 'aliquota_ipi',
  valor_pis: 'valor_pis',
  aliquota_pis: 'aliquota_pis',
  valor_cofins: 'valor_cofins',
  aliquota_cofins: 'aliquota_cofins'
};

exports.Prisma.Notas_fiscais_totaisScalarFieldEnum = {
  id_nf_total: 'id_nf_total',
  id_nf: 'id_nf',
  base_icms: 'base_icms',
  valor_icms: 'valor_icms',
  base_st: 'base_st',
  valor_st: 'valor_st',
  valor_produtos: 'valor_produtos',
  valor_frete: 'valor_frete',
  valor_seguro: 'valor_seguro',
  outras_despesas: 'outras_despesas',
  valor_ipi: 'valor_ipi',
  valor_pis: 'valor_pis',
  valor_cofins: 'valor_cofins',
  valor_total: 'valor_total'
};

exports.Prisma.Notas_fiscais_transporteScalarFieldEnum = {
  id_nf_transporte: 'id_nf_transporte',
  id_nf: 'id_nf',
  id_motorista: 'id_motorista',
  placa: 'placa',
  especie: 'especie',
  marca: 'marca',
  qtde_volumes: 'qtde_volumes',
  peso_bruto: 'peso_bruto',
  peso_liquido: 'peso_liquido',
  tipo_frete: 'tipo_frete',
  valor_frete: 'valor_frete'
};

exports.Prisma.Numeracao_fiscaisScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  tipo_doc: 'tipo_doc',
  serie: 'serie',
  modelo: 'modelo',
  ultimo_numero: 'ultimo_numero',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Obrigacoes_funcionarios_tipoScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  descricao: 'descricao',
  ativo_sn: 'ativo_sn',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Observacoes_itensScalarFieldEnum = {
  id_obs: 'id_obs',
  uuid: 'uuid',
  id_item: 'id_item',
  observacao: 'observacao',
  data_inclusao: 'data_inclusao',
  isdeleted: 'isdeleted'
};

exports.Prisma.Ordens_producaoScalarFieldEnum = {
  id_ordem: 'id_ordem',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  numero: 'numero',
  id_item_prod: 'id_item_prod',
  quantidade: 'quantidade',
  data_emissao: 'data_emissao',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  status: 'status',
  custo_total: 'custo_total',
  observacoes: 'observacoes',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ordens_producao_itensScalarFieldEnum = {
  id_item_op: 'id_item_op',
  uuid: 'uuid',
  id_ordem: 'id_ordem',
  id_item_mp: 'id_item_mp',
  quantidade: 'quantidade',
  unidade: 'unidade',
  custo_unit: 'custo_unit',
  custo_total: 'custo_total',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  id_unidade: 'id_unidade'
};

exports.Prisma.Pedido_itensScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_pedido: 'id_pedido',
  id_item: 'id_item',
  quantidade: 'quantidade',
  preco_unitario: 'preco_unitario',
  unidade: 'unidade',
  valor_total: 'valor_total',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Pedidos_compraScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_fornecedor: 'id_fornecedor',
  numero: 'numero',
  data_emissao: 'data_emissao',
  status: 'status',
  condicao_pgto: 'condicao_pgto',
  observacao: 'observacao',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PermissoesScalarFieldEnum = {
  id_permissao: 'id_permissao',
  codigo: 'codigo',
  descricao: 'descricao'
};

exports.Prisma.Plano_contasScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  codigo: 'codigo',
  descricao: 'descricao',
  id_pai: 'id_pai',
  tipo: 'tipo',
  natureza: 'natureza',
  eh_sintetica: 'eh_sintetica',
  nivel: 'nivel',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Precos_itensScalarFieldEnum = {
  id_preco: 'id_preco',
  uuid: 'uuid',
  id_item: 'id_item',
  preco_venda: 'preco_venda',
  preco_atacado: 'preco_atacado',
  preco_minimo: 'preco_minimo',
  margem: 'margem',
  margem_atacado: 'margem_atacado',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  isdeleted: 'isdeleted'
};

exports.Prisma.Promocoes_itensScalarFieldEnum = {
  id_promocao: 'id_promocao',
  uuid: 'uuid',
  id_item: 'id_item',
  preco_promocao: 'preco_promocao',
  inicio: 'inicio',
  fim: 'fim',
  isdeleted: 'isdeleted'
};

exports.Prisma.ProrrogacoesScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_titulo: 'id_titulo',
  data_anterior: 'data_anterior',
  nova_data: 'nova_data',
  id_usuario: 'id_usuario',
  created_at: 'created_at'
};

exports.Prisma.Reparcelamento_parcelasScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_reparcelamento: 'id_reparcelamento',
  numero_parcela: 'numero_parcela',
  data_vencimento: 'data_vencimento',
  valor: 'valor'
};

exports.Prisma.ReparcelamentosScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_cliente: 'id_cliente',
  data: 'data',
  valor_total: 'valor_total',
  qtd_parcelas: 'qtd_parcelas',
  observacao: 'observacao',
  id_usuario: 'id_usuario',
  created_at: 'created_at'
};

exports.Prisma.Requisicao_itensScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_requisicao: 'id_requisicao',
  id_item: 'id_item',
  quantidade: 'quantidade',
  unidade: 'unidade',
  status: 'status',
  observacao: 'observacao',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Requisicoes_compraScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_usuario: 'id_usuario',
  data: 'data',
  status: 'status',
  prioridade: 'prioridade',
  observacao: 'observacao',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Requisicoes_estoqueScalarFieldEnum = {
  id_req: 'id_req',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_ordem: 'id_ordem',
  numero: 'numero',
  data_emissao: 'data_emissao',
  status: 'status',
  observacoes: 'observacoes',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Requisicoes_estoque_itensScalarFieldEnum = {
  id_req_item: 'id_req_item',
  uuid: 'uuid',
  id_req: 'id_req',
  id_item: 'id_item',
  quantidade: 'quantidade',
  quantidade_atendida: 'quantidade_atendida',
  unidade: 'unidade',
  custo_unit: 'custo_unit',
  custo_total: 'custo_total',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  id_unidade: 'id_unidade'
};

exports.Prisma.Retorno_titulosScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_retorno: 'id_retorno',
  id_titulo: 'id_titulo',
  nosso_numero: 'nosso_numero',
  ocorrencia: 'ocorrencia',
  motivo: 'motivo',
  valor_pago: 'valor_pago',
  data_baixa: 'data_baixa'
};

exports.Prisma.Retornos_bancariosScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  banco: 'banco',
  data: 'data',
  arquivo_nome: 'arquivo_nome',
  qtd_titulos: 'qtd_titulos',
  valor_total: 'valor_total',
  created_at: 'created_at'
};

exports.Prisma.RolesScalarFieldEnum = {
  id_role: 'id_role',
  nome: 'nome',
  descricao: 'descricao'
};

exports.Prisma.Roles_permissoesScalarFieldEnum = {
  id_role: 'id_role',
  id_permissao: 'id_permissao'
};

exports.Prisma.Saldos_itensScalarFieldEnum = {
  id_saldo: 'id_saldo',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  id_item: 'id_item',
  saldo: 'saldo',
  est_min: 'est_min',
  endereco: 'endereco',
  dt_ult_alt: 'dt_ult_alt',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SubgruposScalarFieldEnum = {
  id_subgrupo: 'id_subgrupo',
  uuid: 'uuid',
  id_grupo: 'id_grupo',
  descricao: 'descricao',
  identificador: 'identificador',
  data_alteracao: 'data_alteracao'
};

exports.Prisma.Tipos_pagamentoScalarFieldEnum = {
  id_tipo: 'id_tipo',
  uuid: 'uuid',
  descricao: 'descricao',
  categoria: 'categoria',
  taxa_adm: 'taxa_adm',
  gera_comissao: 'gera_comissao',
  exige_senha: 'exige_senha',
  integra_tef: 'integra_tef',
  pix: 'pix',
  ativo: 'ativo',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Tributacao_itensScalarFieldEnum = {
  id_tributacao: 'id_tributacao',
  uuid: 'uuid',
  id_item: 'id_item',
  id_cst: 'id_cst',
  id_clasfis: 'id_clasfis',
  perc_ipi: 'perc_ipi',
  perc_icms: 'perc_icms',
  perc_pis: 'perc_pis',
  perc_cofins: 'perc_cofins',
  reducao_base: 'reducao_base',
  isdeleted: 'isdeleted'
};

exports.Prisma.Unidades_medidaScalarFieldEnum = {
  id_unidade: 'id_unidade',
  uuid: 'uuid',
  sigla: 'sigla',
  descricao: 'descricao',
  fator_base: 'fator_base',
  unidade_base: 'unidade_base',
  ativo: 'ativo',
  isdeleted: 'isdeleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsuariosScalarFieldEnum = {
  id_usuario: 'id_usuario',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  login: 'login',
  senha_hash: 'senha_hash',
  nome: 'nome',
  email: 'email',
  telefone: 'telefone',
  ativo: 'ativo',
  administrador: 'administrador',
  created_at: 'created_at',
  updated_at: 'updated_at',
  isdeleted: 'isdeleted'
};

exports.Prisma.Usuarios_configScalarFieldEnum = {
  id_config: 'id_config',
  id_usuario: 'id_usuario',
  limite_desc: 'limite_desc',
  limite_acresc: 'limite_acresc',
  permite_multilogin: 'permite_multilogin',
  modulo_acesso: 'modulo_acesso',
  setor: 'setor',
  updated_at: 'updated_at'
};

exports.Prisma.Usuarios_rolesScalarFieldEnum = {
  id_usuario: 'id_usuario',
  id_role: 'id_role'
};

exports.Prisma.Usuarios_vendedoresScalarFieldEnum = {
  id_vinculo: 'id_vinculo',
  id_usuario: 'id_usuario',
  id_vendedor: 'id_vendedor'
};

exports.Prisma.VeiculosScalarFieldEnum = {
  id_veiculo: 'id_veiculo',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  descricao: 'descricao',
  placa: 'placa',
  modelo: 'modelo',
  ano: 'ano',
  capacidade: 'capacidade',
  ativo: 'ativo',
  created_at: 'created_at'
};

exports.Prisma.Venda_itensScalarFieldEnum = {
  id_item_venda: 'id_item_venda',
  id_venda: 'id_venda',
  id_item: 'id_item',
  quantidade: 'quantidade',
  preco_unitario: 'preco_unitario',
  desconto_perc: 'desconto_perc',
  desconto_valor: 'desconto_valor',
  total_item: 'total_item',
  custo_item: 'custo_item',
  created_at: 'created_at'
};

exports.Prisma.Venda_itens_estoqueScalarFieldEnum = {
  id_item_estoque: 'id_item_estoque',
  id_item_venda: 'id_item_venda',
  lote: 'lote',
  numero_serie: 'numero_serie',
  peso_bruto: 'peso_bruto',
  peso_liquido: 'peso_liquido',
  local_estoque: 'local_estoque'
};

exports.Prisma.Venda_itens_statusScalarFieldEnum = {
  id_status: 'id_status',
  id_item_venda: 'id_item_venda',
  status: 'status',
  usuario: 'usuario',
  data_status: 'data_status'
};

exports.Prisma.Venda_itens_tributosScalarFieldEnum = {
  id_item_tributo: 'id_item_tributo',
  id_item_venda: 'id_item_venda',
  cst: 'cst',
  cfop: 'cfop',
  base_icms: 'base_icms',
  valor_icms: 'valor_icms',
  base_st: 'base_st',
  valor_st: 'valor_st',
  valor_ipi: 'valor_ipi',
  valor_pis: 'valor_pis',
  valor_cofins: 'valor_cofins'
};

exports.Prisma.Venda_pagamentosScalarFieldEnum = {
  id_pagamento: 'id_pagamento',
  id_venda: 'id_venda',
  id_tipo_pagamento: 'id_tipo_pagamento',
  id_formas_pagamento: 'id_formas_pagamento',
  valor: 'valor',
  taxa_adm: 'taxa_adm',
  data_recebimento: 'data_recebimento'
};

exports.Prisma.Venda_statusScalarFieldEnum = {
  id_status: 'id_status',
  id_venda: 'id_venda',
  status: 'status',
  data_status: 'data_status',
  usuario: 'usuario'
};

exports.Prisma.VendasScalarFieldEnum = {
  id_venda: 'id_venda',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  numero: 'numero',
  id_cliente: 'id_cliente',
  id_vendedor: 'id_vendedor',
  data_emissao: 'data_emissao',
  status: 'status',
  observacoes: 'observacoes',
  desconto_perc: 'desconto_perc',
  desconto_valor: 'desconto_valor',
  total_produtos: 'total_produtos',
  total_venda: 'total_venda',
  total_nf: 'total_nf',
  criado_em: 'criado_em',
  atualizado_em: 'atualizado_em',
  isdeleted: 'isdeleted'
};

exports.Prisma.VendedoresScalarFieldEnum = {
  id_vendedor: 'id_vendedor',
  uuid: 'uuid',
  id_empresa: 'id_empresa',
  nome: 'nome',
  cpf: 'cpf',
  setor: 'setor',
  email: 'email',
  ramal: 'ramal',
  ddd: 'ddd',
  ativo: 'ativo',
  todos_clientes: 'todos_clientes',
  nao_soma_faturamento: 'nao_soma_faturamento',
  imagem_perfil: 'imagem_perfil',
  tipo: 'tipo',
  created_at: 'created_at',
  updated_at: 'updated_at',
  isdeleted: 'isdeleted'
};

exports.Prisma.Vendedores_comissaoScalarFieldEnum = {
  id_regra: 'id_regra',
  id_vendedor: 'id_vendedor',
  tipo: 'tipo',
  percentual: 'percentual',
  percentual_recebimento: 'percentual_recebimento',
  limite_desconto: 'limite_desconto',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim'
};

exports.Prisma.Vendedores_credenciaisScalarFieldEnum = {
  id_credencial: 'id_credencial',
  id_vendedor: 'id_vendedor',
  senha: 'senha',
  usuario_vpn: 'usuario_vpn',
  senha_vpn: 'senha_vpn',
  ultimo_login: 'ultimo_login'
};

exports.Prisma.Vendedores_metasScalarFieldEnum = {
  id_meta: 'id_meta',
  id_vendedor: 'id_vendedor',
  meta_mensal: 'meta_mensal',
  mg_boa: 'mg_boa',
  mg_otima: 'mg_otima',
  mg_ruim: 'mg_ruim',
  referencia: 'referencia',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  banco: 'banco',
  banco_conta: 'banco_conta',
  banco_boleto_config: 'banco_boleto_config',
  banco_pix_config: 'banco_pix_config',
  banco_credenciais: 'banco_credenciais',
  caixa_aberturas: 'caixa_aberturas',
  caixa_documentos: 'caixa_documentos',
  caixa_pagamentos: 'caixa_pagamentos',
  cargo: 'cargo',
  cidade: 'cidade',
  clasfis: 'clasfis',
  cliente: 'cliente',
  cliente_associado: 'cliente_associado',
  cliente_dependente: 'cliente_dependente',
  cliente_endereco: 'cliente_endereco',
  cliente_referencia: 'cliente_referencia',
  cliente_socio: 'cliente_socio',
  codigos_barras: 'codigos_barras',
  comandas: 'comandas',
  comandas_itens: 'comandas_itens',
  configuracao_empresa: 'configuracao_empresa',
  contas_pagar: 'contas_pagar',
  contas_pagar_baixas: 'contas_pagar_baixas',
  contas_pagar_funcionarios: 'contas_pagar_funcionarios',
  contas_pagas_funcionarios: 'contas_pagas_funcionarios',
  contas_receber: 'contas_receber',
  contas_receber_baixas: 'contas_receber_baixas',
  contato_funcionario: 'contato_funcionario',
  cst: 'cst',
  custos_producao_eqp: 'custos_producao_eqp',
  custos_producao_hh: 'custos_producao_hh',
  descontos_funcionarios_tipo: 'descontos_funcionarios_tipo',
  empresa: 'empresa',
  endereco_funcionario: 'endereco_funcionario',
  entregas: 'entregas',
  equipamento: 'equipamento',
  equipamento_contato: 'equipamento_contato',
  equipamento_endereco: 'equipamento_endereco',
  equipamento_manutencao: 'equipamento_manutencao',
  estado: 'estado',
  familias: 'familias',
  formas_pagamento: 'formas_pagamento',
  formas_pagamento_parcelas: 'formas_pagamento_parcelas',
  fornecedores: 'fornecedores',
  fotos_itens: 'fotos_itens',
  funcionario: 'funcionario',
  grupos: 'grupos',
  impressora: 'impressora',
  itens: 'itens',
  itens_bom: 'itens_bom',
  lotes: 'lotes',
  lotes_cobranca: 'lotes_cobranca',
  marca: 'marca',
  modelo: 'modelo',
  motoristas: 'motoristas',
  movimento_financeiro: 'movimento_financeiro',
  movimentos_estoque: 'movimentos_estoque',
  nota_entrada_itens: 'nota_entrada_itens',
  notas_entrada: 'notas_entrada',
  notas_fiscais: 'notas_fiscais',
  notas_fiscais_eventos: 'notas_fiscais_eventos',
  notas_fiscais_itens: 'notas_fiscais_itens',
  notas_fiscais_itens_tributos: 'notas_fiscais_itens_tributos',
  notas_fiscais_totais: 'notas_fiscais_totais',
  notas_fiscais_transporte: 'notas_fiscais_transporte',
  numeracao_fiscais: 'numeracao_fiscais',
  obrigacoes_funcionarios_tipo: 'obrigacoes_funcionarios_tipo',
  observacoes_itens: 'observacoes_itens',
  ordens_producao: 'ordens_producao',
  ordens_producao_itens: 'ordens_producao_itens',
  pedido_itens: 'pedido_itens',
  pedidos_compra: 'pedidos_compra',
  permissoes: 'permissoes',
  plano_contas: 'plano_contas',
  precos_itens: 'precos_itens',
  promocoes_itens: 'promocoes_itens',
  prorrogacoes: 'prorrogacoes',
  reparcelamento_parcelas: 'reparcelamento_parcelas',
  reparcelamentos: 'reparcelamentos',
  requisicao_itens: 'requisicao_itens',
  requisicoes_compra: 'requisicoes_compra',
  requisicoes_estoque: 'requisicoes_estoque',
  requisicoes_estoque_itens: 'requisicoes_estoque_itens',
  retorno_titulos: 'retorno_titulos',
  retornos_bancarios: 'retornos_bancarios',
  roles: 'roles',
  roles_permissoes: 'roles_permissoes',
  saldos_itens: 'saldos_itens',
  subgrupos: 'subgrupos',
  tipos_pagamento: 'tipos_pagamento',
  tributacao_itens: 'tributacao_itens',
  unidades_medida: 'unidades_medida',
  usuarios: 'usuarios',
  usuarios_config: 'usuarios_config',
  usuarios_roles: 'usuarios_roles',
  usuarios_vendedores: 'usuarios_vendedores',
  veiculos: 'veiculos',
  venda_itens: 'venda_itens',
  venda_itens_estoque: 'venda_itens_estoque',
  venda_itens_status: 'venda_itens_status',
  venda_itens_tributos: 'venda_itens_tributos',
  venda_pagamentos: 'venda_pagamentos',
  venda_status: 'venda_status',
  vendas: 'vendas',
  vendedores: 'vendedores',
  vendedores_comissao: 'vendedores_comissao',
  vendedores_credenciais: 'vendedores_credenciais',
  vendedores_metas: 'vendedores_metas'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
